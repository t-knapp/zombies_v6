init()
{
    level.sharkdepth = -9999999;
    
    switch ( getCvar( "mapname" ) )
    {
        case "mp_harbor":   level.sharkdepth = -118; break;
        default:            break;
    }
}

main()
{
    level endon( "intermission" );
    
    if ( getCvar( "mapname" ) == "mp_harbor" )
        thread harbor_fixes();
    
    // shark scanner
    while ( 1 )
    {
        players = [[ level.call ]]( "get_good_players" );
        for ( i = 0; i < players.size; i++ )
        {
            if ( players[ i ].origin[ 2 ] <= level.sharkdepth && !isDefined( players[ i ].spawnprotection ) )
                players[ i ] kill_for_glitching();

            wait 0.05;
        }
        
        wait 0.2;
    }
}

kill_for_glitching()
{
    self iPrintLnBold( "Glitching is ^1NOT^7 allowed!" );
    iPrintLn( self.name + "^7 was killed for glitching!" );
    self suicide();
}

harbor_fixes()
{
    locs = [];
    locs[ 0 ] = ( -10064, -8613, 168 );
    locs[ 1 ] = ( -11821, -7503, 168 );
    locs[ 2 ] = ( -11853, -7976, 168 );
    
    for ( i = 0; i < locs.size; i++ )
        thread spawn_kill_trigger( locs[ i ], 48, 512 );
}

spawn_kill_trigger( origin, maxdist, height )
{
    level endon( "intermission" );
    
    while ( 1 )
    {
        players = [[ level.call ]]( "get_good_players" );
        for ( i = 0; i < players.size; i++ )
        {
            plyorg = ( players[ i ].origin[ 0 ], players[ i ].origin[ 1 ], 0 );
            org = ( origin[ 0 ], origin[ 1 ], 0 );
            dist = distance( plyorg, org );
            
            if ( dist < maxdist )
            {
                plyht = players[ i ].origin[ 2 ];
                orght = origin[ 2 ];
                
                if ( plyht >= orght && ( plyht <= orght + height ) )
                    players[ i ] kill_for_glitching();
            }
            wait 0.05;
        }
        
        wait 0.2;
    }
}